name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: 
      - "main" 
    tags:
      - "v*"
  pull_request:
env:
  IMAGE_NAME: k8sfilechurner    
  TAG: 0.1.0
jobs:
  lint: 
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: '1.19'
        check-latest: true
    - name: run lint
      run: |
        sudo apt update && sudo apt install -y golint
        golint ./...
  test: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.19'
          check-latest: true 
      - name: Run tests
        run: |
          go test -v ./...
  snyk-non-blocking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for all vulnerabilities and exit
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}      
        continue-on-error: true 
  snyk-blocking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
  build:
    needs : [lint, test, snyk-blocking]
    runs-on: ubuntu-latest
    steps:
      - name: use Docker Buildx
        uses: docker/setup-buildx-action@v1  

      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} 
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha
